"""
给你一个整型数组 nums ，在数组中找出由三个数组成的最大乘积，并输出这个乘积。
"""


def maximum_product(nums: list[int]) -> int:
    nums.sort()
    return max(nums[0] * nums[1] * nums[-1], nums[-1] * nums[-2] * nums[-3])


"""
如果数组中全是非负数，则排序后最大的三个数相乘即为最大乘积；
如果全是非正数，则最大的三个数相乘同样也为最大乘积。
如果数组中有正数有负数，则最大乘积既可能是三个最大正数的乘积，
也可能是两个最小负数（即绝对值最大）与最大正数的乘积。

综上，我们在给数组排序后，
分别求出三个最大正数的乘积，以及两个最小负数与最大正数的乘积，
二者之间的最大值即为所求答案。
"""

print(maximum_product([-100, -98, -1, 2, 3, 4]))
